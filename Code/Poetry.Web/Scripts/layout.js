var Metronic = function () { var B, a = !1, b = !1, c = !1, d = !1, e = [], f = "../../assets/", g = "global/img/", h = "global/plugins/", i = "global/css/", j = { blue: "#89C4F4", red: "#F3565D", green: "#1bbc9b", purple: "#9b59b6", grey: "#95a5a6", yellow: "#F8CB00" }, k = function () { "rtl" === $("body").css("direction") && (a = !0), b = !!navigator.userAgent.match(/MSIE 8.0/), c = !!navigator.userAgent.match(/MSIE 9.0/), d = !!navigator.userAgent.match(/MSIE 10.0/), d && $("html").addClass("ie10"), (d || c || b) && $("html").addClass("ie") }, l = function () { var a, b; for (a = 0; a < e.length; a++) b = e[a], b.call() }, m = function () { var a, c; b ? $(window).resize(function () { c != document.documentElement.clientHeight && (a && clearTimeout(a), a = setTimeout(function () { l() }, 50), c = document.documentElement.clientHeight) }) : $(window).resize(function () { a && clearTimeout(a), a = setTimeout(function () { l() }, 50) }) }, n = function () { $("body").on("click", ".portlet > .portlet-title > .tools > a.remove", function (a) { a.preventDefault(); var b = $(this).closest(".portlet"); $("body").hasClass("page-portlet-fullscreen") && $("body").removeClass("page-portlet-fullscreen"), b.find(".portlet-title .fullscreen").tooltip("destroy"), b.find(".portlet-title > .tools > .reload").tooltip("destroy"), b.find(".portlet-title > .tools > .remove").tooltip("destroy"), b.find(".portlet-title > .tools > .config").tooltip("destroy"), b.find(".portlet-title > .tools > .collapse, .portlet > .portlet-title > .tools > .expand").tooltip("destroy"), b.remove() }), $("body").on("click", ".portlet > .portlet-title .fullscreen", function (a) { var b, c; a.preventDefault(), b = $(this).closest(".portlet"), b.hasClass("portlet-fullscreen") ? ($(this).removeClass("on"), b.removeClass("portlet-fullscreen"), $("body").removeClass("page-portlet-fullscreen"), b.children(".portlet-body").css("height", "auto")) : (c = Metronic.getViewPort().height - b.children(".portlet-title").outerHeight() - parseInt(b.children(".portlet-body").css("padding-top")) - parseInt(b.children(".portlet-body").css("padding-bottom")), $(this).addClass("on"), b.addClass("portlet-fullscreen"), $("body").addClass("page-portlet-fullscreen"), b.children(".portlet-body").css("height", c)) }), $("body").on("click", ".portlet > .portlet-title > .tools > a.reload", function (a) { var b, c, d; a.preventDefault(), b = $(this).closest(".portlet").children(".portlet-body"), c = $(this).attr("data-url"), d = $(this).attr("data-error-display"), c ? (Metronic.blockUI({ target: b, animate: !0, overlayColor: "none" }), $.ajax({ type: "GET", cache: !1, url: c, dataType: "html", success: function (a) { Metronic.unblockUI(b), b.html(a) }, error: function () { Metronic.unblockUI(b); var f = "Error on reloading the content. Please check your connection and try again."; "toastr" == d && toastr ? toastr.error(f) : "notific8" == d && $.notific8 ? ($.notific8("zindex", 11500), $.notific8(f, { theme: "ruby", life: 3e3 })) : alert(f) } })) : (Metronic.blockUI({ target: b, animate: !0, overlayColor: "none" }), window.setTimeout(function () { Metronic.unblockUI(b) }, 1e3)) }), $('.portlet .portlet-title a.reload[data-load="true"]').click(), $("body").on("click", ".portlet > .portlet-title > .tools > .collapse, .portlet .portlet-title > .tools > .expand", function (a) { a.preventDefault(); var b = $(this).closest(".portlet").children(".portlet-body"); $(this).hasClass("collapse") ? ($(this).removeClass("collapse").addClass("expand"), b.slideUp(200)) : ($(this).removeClass("expand").addClass("collapse"), b.slideDown(200)) }) }, o = function () { if ($().uniform) { var a = $("input[type=checkbox]:not(.toggle, .md-check, .md-radiobtn, .make-switch, .icheck), input[type=radio]:not(.toggle, .md-check, .md-radiobtn, .star, .make-switch, .icheck)"); a.size() > 0 && a.each(function () { 0 === $(this).parents(".checker").size() && ($(this).show(), $(this).uniform()) }) } }, p = function () { $("body").on("click", ".md-checkbox > label, .md-radio > label", function () { var c, a = $(this), b = $(this).children("span:first-child"); b.addClass("inc"), c = b.clone(!0), b.before(c), $("." + b.attr("class") + ":last", a).remove() }), $("body").hasClass("page-md") && $("body").on("click", "a.btn, button.btn, input.btn, label.btn", function (a) { var b, c, d, e, f; b = $(this), 0 == b.find(".md-click-circle").length && b.prepend("<span class='md-click-circle'></span>"), c = b.find(".md-click-circle"), c.removeClass("md-click-animate"), c.height() || c.width() || (d = Math.max(b.outerWidth(), b.outerHeight()), c.css({ height: d, width: d })), e = a.pageX - b.offset().left - c.width() / 2, f = a.pageY - b.offset().top - c.height() / 2, c.css({ top: f + "px", left: e + "px" }).addClass("md-click-animate") }); var a = function (a) { "" != a.val() ? a.addClass("edited") : a.removeClass("edited") }; $("body").on("keydown", ".form-md-floating-label .form-control", function () { a($(this)) }), $("body").on("blur", ".form-md-floating-label .form-control", function () { a($(this)) }) }, q = function () { $().iCheck && $(".icheck").each(function () { var a = $(this).attr("data-checkbox") ? $(this).attr("data-checkbox") : "icheckbox_minimal-grey", b = $(this).attr("data-radio") ? $(this).attr("data-radio") : "iradio_minimal-grey"; a.indexOf("_line") > -1 || b.indexOf("_line") > -1 ? $(this).iCheck({ checkboxClass: a, radioClass: b, insert: '<div class="icheck_line-icon"></div>' + $(this).attr("data-label") }) : $(this).iCheck({ checkboxClass: a, radioClass: b }) }) }, r = function () { $().bootstrapSwitch && $(".make-switch").bootstrapSwitch() }, s = function () { $().confirmation && $("[data-toggle=confirmation]").confirmation({ container: "body", btnOkClass: "btn-xs btn-success", btnCancelClass: "btn-xs btn-danger" }) }, t = function () { $("body").on("shown.bs.collapse", ".accordion.scrollable", function (a) { Metronic.scrollTo($(a.target)) }) }, u = function () { if (location.hash) { var a = location.hash.substr(1); $('a[href="#' + a + '"]').parents(".tab-pane:hidden").each(function () { var a = $(this).attr("id"); $('a[href="#' + a + '"]').click() }), $('a[href="#' + a + '"]').click() } $().tabdrop && $(".tabbable-tabdrop .nav-pills, .tabbable-tabdrop .nav-tabs").tabdrop({ text: '<i class="fa fa-ellipsis-v"></i>&nbsp;<i class="fa fa-angle-down"></i>' }) }, v = function () { $("body").on("hide.bs.modal", function () { $(".modal:visible").size() > 1 && $("html").hasClass("modal-open") === !1 ? $("html").addClass("modal-open") : $(".modal:visible").size() <= 1 && $("html").removeClass("modal-open") }), $("body").on("show.bs.modal", ".modal", function () { $(this).hasClass("modal-scroll") && $("body").addClass("modal-open-noscroll") }), $("body").on("hide.bs.modal", ".modal", function () { $("body").removeClass("modal-open-noscroll") }), $("body").on("hidden.bs.modal", ".modal:not(.modal-cached)", function () { $(this).removeData("bs.modal") }) }, w = function () { $(".tooltips").tooltip(), $(".portlet > .portlet-title .fullscreen").tooltip({ container: "body", title: "Fullscreen" }), $(".portlet > .portlet-title > .tools > .reload").tooltip({ container: "body", title: "Reload" }), $(".portlet > .portlet-title > .tools > .remove").tooltip({ container: "body", title: "Remove" }), $(".portlet > .portlet-title > .tools > .config").tooltip({ container: "body", title: "Settings" }), $(".portlet > .portlet-title > .tools > .collapse, .portlet > .portlet-title > .tools > .expand").tooltip({ container: "body", title: "Collapse/Expand" }) }, x = function () { $("body").on("click", ".dropdown-menu.hold-on-click", function (a) { a.stopPropagation() }) }, y = function () { $("body").on("click", '[data-close="alert"]', function (a) { $(this).parent(".alert").hide(), $(this).closest(".note").hide(), a.preventDefault() }), $("body").on("click", '[data-close="note"]', function (a) { $(this).closest(".note").hide(), a.preventDefault() }), $("body").on("click", '[data-remove="note"]', function (a) { $(this).closest(".note").remove(), a.preventDefault() }) }, z = function () { $('[data-hover="dropdown"]').not(".hover-initialized").each(function () { $(this).dropdownHover(), $(this).addClass("hover-initialized") }) }, A = function () { "function" == typeof autosize && autosize(document.querySelector("textarea.autosizeme")) }, C = function () { $(".popovers").popover(), $(document).on("click.bs.popover.data-api", function () { B && B.popover("hide") }) }, D = function () { Metronic.initSlimScroll(".scroller") }, E = function () { jQuery.fancybox && $(".fancybox-button").size() > 0 && $(".fancybox-button").fancybox({ groupAttr: "data-rel", prevEffect: "none", nextEffect: "none", closeBtn: !0, helpers: { title: { type: "inside" } } }) }, F = function () { (b || c) && $("input[placeholder]:not(.placeholder-no-fix), textarea[placeholder]:not(.placeholder-no-fix)").each(function () { var a = $(this); "" === a.val() && "" !== a.attr("placeholder") && a.addClass("placeholder").val(a.attr("placeholder")), a.focus(function () { a.val() == a.attr("placeholder") && a.val("") }), a.blur(function () { ("" === a.val() || a.val() == a.attr("placeholder")) && a.val(a.attr("placeholder")) }) }) }, G = function () { $().select2 && $(".select2me").select2({ placeholder: "Select", allowClear: !0 }) }; return { init: function () { k(), m(), p(), o(), q(), r(), D(), E(), G(), n(), y(), x(), u(), w(), C(), t(), v(), s(), A(), F() }, initAjax: function () { o(), q(), r(), z(), D(), G(), E(), x(), w(), C(), t(), s() }, initComponents: function () { this.initAjax() }, setLastPopedPopover: function (a) { B = a }, addResizeHandler: function (a) { e.push(a) }, runResizeHandlers: function () { l() }, scrollTo: function (a, b) { var c = a && a.size() > 0 ? a.offset().top : 0; a && ($("body").hasClass("page-header-fixed") ? c -= $(".page-header").height() : $("body").hasClass("page-header-top-fixed") ? c -= $(".page-header-top").height() : $("body").hasClass("page-header-menu-fixed") && (c -= $(".page-header-menu").height()), c += b ? b : -1 * a.height()), $("html,body").animate({ scrollTop: c }, "slow") }, initSlimScroll: function (b) { $(b).each(function () { if (!$(this).attr("data-initialized")) { var b; b = $(this).attr("data-height") ? $(this).attr("data-height") : $(this).css("height"), $(this).slimScroll({ allowPageScroll: !0, size: "7px", color: $(this).attr("data-handle-color") ? $(this).attr("data-handle-color") : "#bbb", wrapperClass: $(this).attr("data-wrapper-class") ? $(this).attr("data-wrapper-class") : "slimScrollDiv", railColor: $(this).attr("data-rail-color") ? $(this).attr("data-rail-color") : "#eaeaea", position: a ? "left" : "right", height: b, alwaysVisible: "1" == $(this).attr("data-always-visible") ? !0 : !1, railVisible: "1" == $(this).attr("data-rail-visible") ? !0 : !1, disableFadeOut: !0 }), $(this).attr("data-initialized", "1") } }) }, destroySlimScroll: function (a) { $(a).each(function () { var a, b; "1" === $(this).attr("data-initialized") && ($(this).removeAttr("data-initialized"), $(this).removeAttr("style"), a = {}, $(this).attr("data-handle-color") && (a["data-handle-color"] = $(this).attr("data-handle-color")), $(this).attr("data-wrapper-class") && (a["data-wrapper-class"] = $(this).attr("data-wrapper-class")), $(this).attr("data-rail-color") && (a["data-rail-color"] = $(this).attr("data-rail-color")), $(this).attr("data-always-visible") && (a["data-always-visible"] = $(this).attr("data-always-visible")), $(this).attr("data-rail-visible") && (a["data-rail-visible"] = $(this).attr("data-rail-visible")), $(this).slimScroll({ wrapperClass: $(this).attr("data-wrapper-class") ? $(this).attr("data-wrapper-class") : "slimScrollDiv", destroy: !0 }), b = $(this), $.each(a, function (a, c) { b.attr(a, c) })) }) }, scrollTop: function () { Metronic.scrollTo() }, blockUI: function (a) { var b, c; a = $.extend(!0, {}, a), b = "", b = a.animate ? '<div class="loading-message ' + (a.boxed ? "loading-message-boxed" : "") + '">' + '<div class="block-spinner-bar"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div>' + "</div>" : a.iconOnly ? '<div class="loading-message ' + (a.boxed ? "loading-message-boxed" : "") + '"><img src="' + this.getGlobalImgPath() + 'loading-spinner-grey.gif" align=""></div>' : a.textOnly ? '<div class="loading-message ' + (a.boxed ? "loading-message-boxed" : "") + '"><span>&nbsp;&nbsp;' + (a.message ? a.message : "LOADING...") + "</span></div>" : '<div class="loading-message ' + (a.boxed ? "loading-message-boxed" : "") + '"><img src="' + this.getGlobalImgPath() + 'loading-spinner-grey.gif" align=""><span>&nbsp;&nbsp;' + (a.message ? a.message : "LOADING...") + "</span></div>", a.target ? (c = $(a.target), c.height() <= $(window).height() && (a.cenrerY = !0), c.block({ message: b, baseZ: a.zIndex ? a.zIndex : 1e3, centerY: void 0 !== a.cenrerY ? a.cenrerY : !1, css: { top: "10%", border: "0", padding: "0", backgroundColor: "none" }, overlayCSS: { backgroundColor: a.overlayColor ? a.overlayColor : "#555", opacity: a.boxed ? .05 : .1, cursor: "wait" } })) : $.blockUI({ message: b, baseZ: a.zIndex ? a.zIndex : 1e3, css: { border: "0", padding: "0", backgroundColor: "none" }, overlayCSS: { backgroundColor: a.overlayColor ? a.overlayColor : "#555", opacity: a.boxed ? .05 : .1, cursor: "wait" } }) }, unblockUI: function (a) { a ? $(a).unblock({ onUnblock: function () { $(a).css("position", ""), $(a).css("zoom", "") } }) : $.unblockUI() }, startPageLoading: function (a) { a && a.animate ? ($(".page-spinner-bar").remove(), $("body").append('<div class="page-spinner-bar"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div>')) : ($(".page-loading").remove(), $("body").append('<div class="page-loading"><img src="' + this.getGlobalImgPath() + 'loading-spinner-grey.gif"/>&nbsp;&nbsp;<span>' + (a && a.message ? a.message : "Loading...") + "</span></div>")) }, stopPageLoading: function () { $(".page-loading, .page-spinner-bar").remove() }, alert: function (a) { var b, c; return a = $.extend(!0, { container: "", place: "append", type: "success", message: "", close: !0, reset: !0, focus: !0, closeInSeconds: 0, icon: "" }, a), b = Metronic.getUniqueID("Metronic_alert"), c = '<div id="' + b + '" class="Metronic-alerts alert alert-' + a.type + ' fade in">' + (a.close ? '<button type="button" class="close" data-dismiss="alert" aria-hidden="true"></button>' : "") + ("" !== a.icon ? '<i class="fa-lg fa fa-' + a.icon + '"></i>  ' : "") + a.message + "</div>", a.reset && $(".Metronic-alerts").remove(), a.container ? "append" == a.place ? $(a.container).append(c) : $(a.container).prepend(c) : $("body").hasClass("page-container-bg-solid") ? $(".page-title").after(c) : $(".page-bar").size() > 0 ? $(".page-bar").after(c) : $(".page-breadcrumb").after(c), a.focus && Metronic.scrollTo($("#" + b)), a.closeInSeconds > 0 && setTimeout(function () { $("#" + b).remove() }, 1e3 * a.closeInSeconds), b }, initUniform: function (a) { a ? $(a).each(function () { 0 === $(this).parents(".checker").size() && ($(this).show(), $(this).uniform()) }) : o() }, updateUniform: function (a) { $.uniform.update(a) }, initFancybox: function () { E() }, getActualVal: function (a) { return a = $(a), a.val() === a.attr("placeholder") ? "" : a.val() }, getURLParameter: function (a) { var c, d, b = window.location.search.substring(1), e = b.split("&"); for (c = 0; c < e.length; c++) if (d = e[c].split("="), d[0] == a) return unescape(d[1]); return null }, isTouchDevice: function () { try { return document.createEvent("TouchEvent"), !0 } catch (a) { return !1 } }, getViewPort: function () { var a = window, b = "inner"; return "innerWidth" in window || (b = "client", a = document.documentElement || document.body), { width: a[b + "Width"], height: a[b + "Height"] } }, getUniqueID: function () { return "prefix_" + Math.floor(Math.random() * (new Date).getTime()) }, isIE8: function () { return b }, isIE9: function () { return c }, isRTL: function () { return a }, isAngularJsApp: function () { return "undefined" == typeof angular ? !1 : !0 }, getAssetsPath: function () { return f }, setAssetsPath: function (a) { f = a }, setGlobalImgPath: function (a) { g = a }, getGlobalImgPath: function () { return f + g }, setGlobalPluginsPath: function (a) { h = a }, getGlobalPluginsPath: function () { return f + h }, getGlobalCssPath: function () { return f + i }, getBrandColor: function (a) { return j[a] ? j[a] : "" }, getResponsiveBreakpoint: function (a) { var b = { xs: 480, sm: 768, md: 992, lg: 1200 }; return b[a] ? b[a] : 0 } } }();
var Layout = function () { var a = "media/images/", b = "media/layout/css/", c = Metronic.getResponsiveBreakpoint("md"), d = function () { var e, f, h, i, a = $(".page-content"), b = $(".page-sidebar"), d = $("body"); d.hasClass("page-footer-fixed") === !0 && d.hasClass("page-sidebar-fixed") === !1 ? (f = Metronic.getViewPort().height - $(".page-footer").outerHeight() - $(".page-header").outerHeight(), a.height() < f && a.attr("style", "min-height:" + f + "px")) : (d.hasClass("page-sidebar-fixed") ? (e = g(), d.hasClass("page-footer-fixed") === !1 && (e -= $(".page-footer").outerHeight())) : (h = $(".page-header").outerHeight(), i = $(".page-footer").outerHeight(), e = Metronic.getViewPort().width < c ? Metronic.getViewPort().height - h - i : b.height() + 20, e + h + i <= Metronic.getViewPort().height && (e = Metronic.getViewPort().height - h - i)), a.attr("style", "min-height:" + e + "px")) }, e = function (a, b) { var d = location.hash.toLowerCase(), e = $(".page-sidebar-menu"); "click" === a || "set" === a ? b = $(b) : "match" === a && e.find("li > a").each(function () { var a = $(this).attr("href").toLowerCase(); return a.length > 1 && d.substr(1, a.length - 1) == a.substr(1) ? (b = $(this), void 0) : void 0 }), b && 0 != b.size() && "javascript:;" !== b.attr("href").toLowerCase() && "#" !== b.attr("href").toLowerCase() && (parseInt(e.data("slide-speed")), e.data("keep-expanded"), e.find("li.active").removeClass("active"), e.find("li > a > .selected").remove(), e.hasClass("page-sidebar-menu-hover-submenu") === !1 ? e.find("li.open").each(function () { 0 === $(this).children(".sub-menu").size() && ($(this).removeClass("open"), $(this).find("> a > .arrow.open").removeClass("open")) }) : e.find("li.open").removeClass("open"), b.parents("li").each(function () { $(this).addClass("active"), $(this).find("> a > span.arrow").addClass("open"), 1 === $(this).parent("ul.page-sidebar-menu").size() && $(this).find("> a").append('<span class="selected"></span>'), 1 === $(this).children("ul.sub-menu").size() && $(this).addClass("open") }), "click" === a && Metronic.getViewPort().width < c && $(".page-sidebar").hasClass("in") && $(".page-header .responsive-toggler").click()) }, f = function () { $(".page-sidebar").on("click", "li > a", function (a) { var b, e, f, g, h, i, j, k, l; if (!($("body").hasClass("page-sidebar-closed") && 1 === $(this).parent("li").parent(".page-sidebar-menu").size() || (b = $(this).next().hasClass("sub-menu"), Metronic.getViewPort().width >= c && 1 === $(this).parents(".page-sidebar-menu-hover-submenu").size()))) return b === !1 ? (Metronic.getViewPort().width < c && $(".page-sidebar").hasClass("in") && $(".page-header .responsive-toggler").click(), void 0) : ($(this).next().hasClass("sub-menu always-open") || (e = $(this).parent().parent(), f = $(this), g = $(".page-sidebar-menu"), h = $(this).next(), i = g.data("auto-scroll"), j = parseInt(g.data("slide-speed")), k = g.data("keep-expanded"), k !== !0 && (e.children("li.open").children("a").children(".arrow").removeClass("open"), e.children("li.open").children(".sub-menu:not(.always-open)").slideUp(j), e.children("li.open").removeClass("open")), l = -200, h.is(":visible") ? ($(".arrow", $(this)).removeClass("open"), $(this).parent().removeClass("open"), h.slideUp(j, function () { i === !0 && $("body").hasClass("page-sidebar-closed") === !1 && ($("body").hasClass("page-sidebar-fixed") ? g.slimScroll({ scrollTo: f.position().top }) : Metronic.scrollTo(f, l)), d() })) : b && ($(".arrow", $(this)).addClass("open"), $(this).parent().addClass("open"), h.slideDown(j, function () { i === !0 && $("body").hasClass("page-sidebar-closed") === !1 && ($("body").hasClass("page-sidebar-fixed") ? g.slimScroll({ scrollTo: f.position().top }) : Metronic.scrollTo(f, l)), d() })), a.preventDefault()), void 0) }), $(".page-sidebar").on("click", " li > a.ajaxify", function (a) { var b, d, f, g; a.preventDefault(), Metronic.scrollTop(), b = $(this).attr("href"), d = $(".page-sidebar ul"), $(".page-content"), f = $(".page-content .page-content-body"), d.children("li.active").removeClass("active"), d.children("arrow.open").removeClass("open"), $(this).parents("li").each(function () { $(this).addClass("active"), $(this).children("a > span.arrow").addClass("open") }), $(this).parents("li").addClass("active"), Metronic.getViewPort().width < c && $(".page-sidebar").hasClass("in") && $(".page-header .responsive-toggler").click(), Metronic.startPageLoading(), g = $(this), $.ajax({ type: "GET", cache: !1, url: b, dataType: "html", success: function (a) { 0 === g.parents("li.open").size() && $(".page-sidebar-menu > li.open > a").click(), Metronic.stopPageLoading(), f.html(a), Layout.fixContentHeight(), Metronic.initAjax() }, error: function () { Metronic.stopPageLoading(), f.html("<h4>Could not load the requested content.</h4>") } }) }), $(".page-content").on("click", ".ajaxify", function (a) { var b, e; a.preventDefault(), Metronic.scrollTop(), b = $(this).attr("href"), $(".page-content"), e = $(".page-content .page-content-body"), Metronic.startPageLoading(), Metronic.getViewPort().width < c && $(".page-sidebar").hasClass("in") && $(".page-header .responsive-toggler").click(), $.ajax({ type: "GET", cache: !1, url: b, dataType: "html", success: function (a) { Metronic.stopPageLoading(), e.html(a), Layout.fixContentHeight(), Metronic.initAjax() }, error: function () { e.html("<h4>Could not load the requested content.</h4>"), Metronic.stopPageLoading() } }) }), $(document).on("click", ".page-header-fixed-mobile .page-header .responsive-toggler", function () { Metronic.scrollTop() }), i(), $(".page-sidebar").on("click", ".sidebar-search .remove", function (a) { a.preventDefault(), $(".sidebar-search").removeClass("open") }), $(".page-sidebar .sidebar-search").on("keypress", "input.form-control", function (a) { return 13 == a.which ? ($(".sidebar-search").submit(), !1) : void 0 }), $(".sidebar-search .submit").on("click", function (a) { a.preventDefault(), $("body").hasClass("page-sidebar-closed") ? $(".sidebar-search").hasClass("open") === !1 ? (1 === $(".page-sidebar-fixed").size() && $(".page-sidebar .sidebar-toggler").click(), $(".sidebar-search").addClass("open")) : $(".sidebar-search").submit() : $(".sidebar-search").submit() }), 0 !== $(".sidebar-search").size() && ($(".sidebar-search .input-group").on("click", function (a) { a.stopPropagation() }), $("body").on("click", function () { $(".sidebar-search").hasClass("open") && $(".sidebar-search").removeClass("open") })) }, g = function () { var a = Metronic.getViewPort().height - $(".page-header").outerHeight(); return $("body").hasClass("page-footer-fixed") && (a -= $(".page-footer").outerHeight()), a }, h = function () { var a = $(".page-sidebar-menu"); return Metronic.destroySlimScroll(a), 0 === $(".page-sidebar-fixed").size() ? (d(), void 0) : (Metronic.getViewPort().width >= c && (a.attr("data-height", g()), Metronic.initSlimScroll(a), d()), void 0) }, i = function () { var a = $("body"); a.hasClass("page-sidebar-fixed") && $(".page-sidebar").on("mouseenter", function () { a.hasClass("page-sidebar-closed") && $(this).find(".page-sidebar-menu").removeClass("page-sidebar-menu-closed") }).on("mouseleave", function () { a.hasClass("page-sidebar-closed") && $(this).find(".page-sidebar-menu").addClass("page-sidebar-menu-closed") }) }, j = function () { var a = $("body"); $.cookie && "1" === $.cookie("sidebar_closed") && Metronic.getViewPort().width >= c && ($("body").addClass("page-sidebar-closed"), $(".page-sidebar-menu").addClass("page-sidebar-menu-closed")), $("body").on("click", ".sidebar-toggler", function () { var c = $(".page-sidebar"), d = $(".page-sidebar-menu"); $(".sidebar-search", c).removeClass("open"), a.hasClass("page-sidebar-closed") ? (a.removeClass("page-sidebar-closed"), d.removeClass("page-sidebar-menu-closed"), $.cookie && $.cookie("sidebar_closed", "0")) : (a.addClass("page-sidebar-closed"), d.addClass("page-sidebar-menu-closed"), a.hasClass("page-sidebar-fixed") && d.trigger("mouseleave"), $.cookie && $.cookie("sidebar_closed", "1")), $(window).trigger("resize") }) }, k = function () { $(".page-header").on("click", '.hor-menu a[data-toggle="tab"]', function (a) { var b, c, d; a.preventDefault(), b = $(".hor-menu .nav"), c = b.find("li.current"), $("li.active", c).removeClass("active"), $(".selected", c).remove(), d = $(this).parents("li").last(), d.addClass("current"), d.find("a:first").append('<span class="selected"></span>') }), $(".page-header").on("click", ".search-form", function () { $(this).addClass("open"), $(this).find(".form-control").focus(), $(".page-header .search-form .form-control").on("blur", function () { $(this).closest(".search-form").removeClass("open"), $(this).unbind("blur") }) }), $(".page-header").on("keypress", ".hor-menu .search-form .form-control", function (a) { return 13 == a.which ? ($(this).closest(".search-form").submit(), !1) : void 0 }), $(".page-header").on("mousedown", ".search-form.open .submit", function (a) { a.preventDefault(), a.stopPropagation(), $(this).closest(".search-form").submit() }), $('[data-hover="megamenu-dropdown"]').not(".hover-initialized").each(function () { $(this).dropdownHover(), $(this).addClass("hover-initialized") }), $(document).on("click", ".mega-menu-dropdown .dropdown-menu", function (a) { a.stopPropagation() }) }, l = function () { $("body").on("shown.bs.tab", 'a[data-toggle="tab"]', function () { d() }) }, m = function () { var a = 300, b = 500; navigator.userAgent.match(/iPhone|iPad|iPod/i) ? $(window).bind("touchend touchcancel touchleave", function () { $(this).scrollTop() > a ? $(".scroll-to-top").fadeIn(b) : $(".scroll-to-top").fadeOut(b) }) : $(window).scroll(function () { $(this).scrollTop() > a ? $(".scroll-to-top").fadeIn(b) : $(".scroll-to-top").fadeOut(b) }), $(".scroll-to-top").click(function (a) { return a.preventDefault(), $("html, body").animate({ scrollTop: 0 }, b), !1 }) }, n = function () { var d, a = $(".full-height-content"), b = Metronic.getViewPort().height - $(".page-header").outerHeight(!0) - $(".page-footer").outerHeight(!0) - $(".page-title").outerHeight(!0) - $(".page-bar").outerHeight(!0); if (a.hasClass("portlet")) { if (d = a.find(".portlet-body"), Metronic.getViewPort().width < c) return Metronic.destroySlimScroll(d.find(".full-height-content-body")), void 0; b = b - a.find(".portlet-title").outerHeight(!0) - parseInt(a.find(".portlet-body").css("padding-top")) - parseInt(a.find(".portlet-body").css("padding-bottom")) - 2, a.hasClass("full-height-content-scrollable") ? (b -= 35, d.find(".full-height-content-body").css("height", b), Metronic.initSlimScroll(d.find(".full-height-content-body"))) : d.css("min-height", b) } else { if (Metronic.getViewPort().width < c) return Metronic.destroySlimScroll(a.find(".full-height-content-body")), void 0; a.hasClass("full-height-content-scrollable") ? (b -= 35, a.find(".full-height-content-body").css("height", b), Metronic.initSlimScroll(a.find(".full-height-content-body"))) : a.css("min-height", b) } }; return { initHeader: function () { k() }, setSidebarMenuActiveLink: function (a, b) { e(a, b) }, initSidebar: function () { h(), f(), j(), Metronic.isAngularJsApp() && e("match"), Metronic.addResizeHandler(h) }, initContent: function () { n(), l(), Metronic.addResizeHandler(d), Metronic.addResizeHandler(n) }, initFooter: function () { m() }, init: function () { this.initHeader(), this.initSidebar(), this.initContent(), this.initFooter() }, fixContentHeight: function () { d() }, initFixedSidebarHoverEffect: function () { i() }, initFixedSidebar: function () { h() }, getLayoutImgPath: function () { return Metronic.getAssetsPath() + a }, getLayoutCssPath: function () { return Metronic.getAssetsPath() + b } } }();
